jquery ajax 局部刷新 刷新代码片段里面的内容ID标签的一切
$("#content").load(location.href+" #content>*","");

***************************************************************************

刷新
window.location.reload()刷新当前页面. 
parent.location.reload()刷新父亲对象（用于框架） 
opener.location.reload()刷新父窗口对象（用于单开窗口） 
top.location.reload()刷新最顶端对象（用于多开窗口）

***************************************************************************

返回上一页
<script>window.history.back(-1); </script>
***************************************************************************

********************************* JavaScript正则表达式 ******************************************
身份证：/(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/
手机号：/^[1][3,4,5,7,8][0-9]{9}$/




JavaScript使用正则表达式：
var identityCardReg = /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/;
//identityCardReg.test(_identityCard // return true or false
if (!identityCardReg.test(_identityCard)){
	alert(false);
	return false;
}

验证银行卡号方法:
	//luhn校验规则：16位银行卡号（19位通用）:
    // 1.将未带校验位的 15（或18）位卡号从右依次编号 1 到 15（18），位于奇数位号上的数字乘以 2。
    // 2.将奇位乘积的个十位全部相加，再加上所有偶数位上的数字。
    // 3.将加法和加上校验位能被 10 整除。
    //bankno位银行卡号
    function luhnCheck(bankno){
        var lastNum=bankno.substr(bankno.length-1,1);//取出最后一位（与luhn进行比较）

        var first15Num=bankno.substr(0,bankno.length-1);//前15或18位
        var newArr=new Array();
        for(var i=first15Num.length-1;i>-1;i--){    //前15或18位倒序存进数组
            newArr.push(first15Num.substr(i,1));
        }
        var arrJiShu=new Array();  //奇数位*2的积 <9
        var arrJiShu2=new Array(); //奇数位*2的积 >9

        var arrOuShu=new Array();  //偶数位数组
        for(var j=0;j<newArr.length;j++){
            if((j+1)%2==1){//奇数位
                if(parseInt(newArr[j])*2<9)
                    arrJiShu.push(parseInt(newArr[j])*2);
                else
                    arrJiShu2.push(parseInt(newArr[j])*2);
            }
            else //偶数位
                arrOuShu.push(newArr[j]);
        }

        var jishu_child1=new Array();//奇数位*2 >9 的分割之后的数组个位数
        var jishu_child2=new Array();//奇数位*2 >9 的分割之后的数组十位数
        for(var h=0;h<arrJiShu2.length;h++){
            jishu_child1.push(parseInt(arrJiShu2[h])%10);
            jishu_child2.push(parseInt(arrJiShu2[h])/10);
        }

        var sumJiShu=0; //奇数位*2 < 9 的数组之和
        var sumOuShu=0; //偶数位数组之和
        var sumJiShuChild1=0; //奇数位*2 >9 的分割之后的数组个位数之和
        var sumJiShuChild2=0; //奇数位*2 >9 的分割之后的数组十位数之和
        var sumTotal=0;
        for(var m=0;m<arrJiShu.length;m++){
            sumJiShu=sumJiShu+parseInt(arrJiShu[m]);
        }

        for(var n=0;n<arrOuShu.length;n++){
            sumOuShu=sumOuShu+parseInt(arrOuShu[n]);
        }

        for(var p=0;p<jishu_child1.length;p++){
            sumJiShuChild1=sumJiShuChild1+parseInt(jishu_child1[p]);
            sumJiShuChild2=sumJiShuChild2+parseInt(jishu_child2[p]);
        }
        //计算总和
        sumTotal = parseInt(sumJiShu) + parseInt(sumOuShu) + parseInt(sumJiShuChild1) + parseInt(sumJiShuChild2);

        //计算luhn值
        var k= parseInt(sumTotal)%10==0?10:parseInt(sumTotal)%10;
        var luhn= 10-k;

        if(lastNum==luhn){
            return true;
        }
        else{
            return false;
        }
    }

***************************************************************************
***************************************************************************
