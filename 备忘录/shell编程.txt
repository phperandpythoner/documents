

#********************** 逻辑判断 *******************************
-eq           //等于
-ne           //不等于
-gt            //大于 （greater ）
-lt            //小于  （less）
-ge            //大于等于
-le            //小于等于

#*****************************************************
#*****************************************************
Shell中判断文件,目录是否存在
	-e filename 如果 filename存在，则为真 
	-d filename 如果 filename为目录，则为真 
	-f filename 如果 filename为常规文件，则为真 
	-L filename 如果 filename为符号链接，则为真 
	-r filename 如果 filename可读，则为真 
	-w filename 如果 filename可写，则为真 
	-x filename 如果 filename可执行，则为真 
	-s filename 如果文件长度不为0，则为真 
	-h filename 如果文件是软链接，则为真
	-O 判断对象是否存在，并且属于当前用户
	-G 判断对象是否存在，并且属于当前用户组
	-nt 判断file1是否比file2新  [ "/data/file1" -nt "/data/file2" ]
	-ot 判断file1是否比file2旧  [ "/data/file1" -ot "/data/file2" ]
	
#如果文件夹不存在，创建文件夹
if [ ! -d "/myfolder" ]; then
  mkdir /myfolder
fi


#******************* shell向文件写入内容 **********************************
覆盖方式写入 >
echo "hello,world" > index.php
追加方式写入 >>
echo "hello,world" >> index.php

#******************* shell脚本中判断上一个命令是否执行成功 **********************************
shell中使用符号“$?”来显示上一条命令执行的返回值，如果为0则代表执行成功，其他表示失败

#******************* Shell 接收传递参数的方法 **********************************
参数处理	说明
$#	传递到脚本的参数个数
$*	以一个单字符串显示所有向脚本传递的参数。
如"$*"用「"」括起来的情况、以"$1 $2 … $n"的形式输出所有参数。
$$	脚本运行的当前进程ID号
$!	后台运行的最后一个进程的ID号
$@	与$*相同，但是使用时加引号，并在引号中返回每个参数。
如"$@"用「"」括起来的情况、以"$1" "$2" … "$n" 的形式输出所有参数。
$-	显示Shell使用的当前选项，与set命令功能相同。
$?	显示最后命令的退出状态。0表示没有错误，其他任何值表明有错误。


$0:执行的文件名
$1:参数1
$2:参数2
...

linux shell中判断bash脚本输入的参数个数
表示参数个数：$#
	if [ $# -gt 0 ]; then
			echo "参数个数为$#个"
	else
			echo "没有参数"
	fi
	